#!/bin/bash




# run this script + init or:
# add this to .bashrc
#
# activate_command(){
#   FOLDER_PATH="/..."
#   if [ -f $FOLDER_PATH/bashrc.project ]; then
#       source $FOLDER_PATH/bashrc.project
	
#   fi
#}









if [[ "$(basename -- "$0")" == "bashrc.project" ]]; then
	echo "* Executing script"
	FOLDER_PATH=$(dirname $( realpath $0 ))
	echo "* Panson folder at $FOLDER_PATH"
else
	echo "* Sourcing script"
	echo "* Panson folder at $FOLDER_PATH"
fi




cd $FOLDER_PATH


if [[ $* == *"init"* ]]; then
	PROJECT_NAME="$(basename $FOLDER_PATH)"
	echo "* Initialising project: $PROJECT_NAME"

	START=$(grep -n "#start:$PROJECT_NAME" ~/.bashrc | cut -d ':' -f1)
	END=$(grep -n "#end:$PROJECT_NAME" ~/.bashrc | cut -d ':' -f1)

	if [[ $START == "" ]] || [[ $END == "" ]] ;then
		echo "* Previousscript not found in ~/.bashrc: $START - $END"
		START=$(wc -l ~/.bashrc | cut -d " " -f1)
	else
		echo "* Previous script found in ~/.bashrc: $START - $END"
		echo "* Deleting previous script"
		sed -i "$START","$END""d" ~/.bashrc
	fi
	echo "* Writing new script in ~/.bashrc at line: $START"
	SCRIPT="#start:$PROJECT_NAME # Generated by bashrc.project\n\
	$PROJECT_NAME (){ \n\
		FOLDER_PATH='$FOLDER_PATH'\n\
		PROJECT_NAME='$PROJECT_NAME'\n\
		if [ -f $FOLDER_PATH/bashrc.project ]; then\n\
			source $FOLDER_PATH/bashrc.project\n\
		fi\n\
	}\n\
#end:$PROJECT_NAME\n"
	echo "${START}i $SCRIPT"
	sed -i "${START}i \
		$SCRIPT" ~/.bashrc
fi





conda activate panson && echo "* panson environment activated"
pip install -q -r requirements.txt && echo "* Requirements installed"

echo -n "* Current git branch: " && git rev-parse --abbrev-ref HEAD




alias bashrc="vim ~/.bashrc"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."


alias top="echo -en \"\033]0;Top\a\" && top"

alias please="sudo"


alias vim="echo -en \"\033]0;$10\a\" && vim"

VIM=$(which vim)
echo "* Vim location: $VIM"


vim(){
	echo -en "\033]0;$1\a"
	$VIM $*
}


pull(){
	GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
	echo "* Pulling from branch: origin $GIT_BRANCH"
	git pull origin $GIT_BRANCH
}

push(){
    GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    echo "* Pushing to branch: origin $GIT_BRANCH"
    git push origin $GIT_BRANCH
}

commit(){
    echo "* git commit -a"
    git commit -a
}

test (){
    if [[ "$*" == *"tunnel"* ]]; then
        export START_NGROK=1
    else
        export START_NGROK=0
    fi
    if [[ "$*" == *"debug"* ]]; then
        flask --app main run --host="0.0.0.0" --port=5000 --debug
    else
        flask --app main run --host="0.0.0.0" --port=5000
    fi


}
deploy (){
	cd $FOLDER_PATH && gcloud run deploy --source .
}
latest () {
    cd $FOLDER_PATH && gcloud run services update-traffic --to-latest
}

